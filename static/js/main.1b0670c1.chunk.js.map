{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","nationList","setNation","searchVal","setSearchVal","open","setOpen","rowDetail","setRowDetail","rowDetailBody","StyledRowBody","style","verticalAlign","width","marginRight","src","flag","alt","display","id","name","region","subregion","nativeName","useEffect","axios","get","then","res","data","map","d","index","catch","err","console","log","columns","field","headerName","flex","hide","renderCell","params","value","type","Modal","onClose","onChange","e","val","target","StyledBtn","onClick","alert","url","idx","list","sort","a","b","charCodeAt","autoHeight","rows","pageSize","onRowDoubleClick","row","styled","div","button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b0670c1.chunk.js","sourcesContent":["import { React, useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport styled from 'styled-components';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Modal from '@material-ui/core/Modal';\n\nfunction App() {\n  const [nationList, setNation] = useState([]);//資料清單\n  const [searchVal, setSearchVal] = useState('');//搜尋值\n  const [open, setOpen] = useState(false);//Modal狀態\n  const [rowDetail, setRowDetail] = useState({});//row詳細資料\n\n  const handleOpen = (data) => {\n    setRowDetail(data);\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setRowDetail({});\n    setOpen(false);\n  }\n\n  function getData() {\n    axios.get('https://restcountries.eu/rest/v2/all')\n      .then((res) => {\n        const data = res.data;\n        setNation(data.map((d, index) => { return { ...d, id: index } }));\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function getNation() {\n    if (!searchVal) return alert('請輸入值');\n    let url = `https://restcountries.eu/rest/v2/name/${searchVal}`\n    axios.get(url)\n      .then((res) => {\n        const data = res.data;\n        setNation(data.map((d, idx) => {\n          return { ...d, id: idx }\n        }));\n        setSearchVal('');\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function inputVal(e) {\n    let val = e.target.value;\n    setSearchVal(val);\n  }\n\n  const rowDetailBody = (\n    <StyledRowBody>\n      <img style={{ verticalAlign: 'sub', width: '60px', marginRight: '10px' }} src={rowDetail.flag} alt=\"\" />\n      <h2 style={{ display: 'inline-block' }} id=\"simple-modal-title\">{rowDetail.name} 詳細資料</h2>\n      <p>region : {rowDetail.region}</p>\n      <p>subregion : {rowDetail.subregion}</p>\n      <p>nativeName : {rowDetail.nativeName}</p>\n    </StyledRowBody>\n  );\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // 欄位\n  const columns = [\n    { field: 'id', headerName: 'areaID', flex: 1, hide: true },\n    {\n      field: 'flag', headerName: '國旗', flex: 1,\n      renderCell: (params) => {\n        return <img width=\"50px\" src={params.value} alt=\"\" />\n      }\n    },\n    { field: 'name', headerName: '國家', flex: 1, },\n    { field: 'alpha2Code', headerName: '2位國家代碼', flex: 1, },\n    { field: 'alpha3Code', headerName: '3位國家代碼', flex: 1, },\n    { field: 'nativeName', headerName: ' 母語名稱', flex: 1, },\n    { field: 'altSpellings', headerName: '替代國家名稱', flex: 1, },\n    { field: 'callingCodes', headerName: '國際電話區號', type: 'number', flex: 1, },\n  ];\n\n  return (\n    <div style={{ width: '100%' }}>\n      <Modal open={open} onClose={handleClose}>\n        {rowDetailBody}\n      </Modal>\n      <label>國名搜尋:</label><input type=\"text\" value={searchVal} onChange={inputVal} /><StyledBtn onClick={getNation}>搜尋</StyledBtn>\n      <StyledBtn onClick={() => {\n        let list = [...nationList]\n        list.sort((a, b) => a.name.charCodeAt() - b.name.charCodeAt());\n        setNation(list)\n      }}>正序排列</StyledBtn>\n      <StyledBtn onClick={() => {\n        let list = [...nationList]\n        list.sort((a, b) => b.name.charCodeAt() - a.name.charCodeAt());\n        setNation(list)\n      }}>倒序排列</StyledBtn>\n      <DataGrid\n        autoHeight={true}\n        rows={nationList}\n        columns={columns}\n        pageSize={25}\n        onRowDoubleClick={({ row }) => { handleOpen(row) }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n// style component\nconst StyledRowBody = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%; \n  transform:translate(-50%,-50%);\n  width: 400;\n  background-color: #fff;\n  border: 2px solid #000;\n  box-shadow: 0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12);\n  padding: 16px 32px 24px;\n`;\n\nconst StyledBtn = styled.button`\n padding:10px;\n margin:5px;\n background:#0066CC;\n color:#fff;\n border:none;\n border-radius:5px;\n cursor:pointer;\n`","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}